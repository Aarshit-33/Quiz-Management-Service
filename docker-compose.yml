version: '3.8'

services:
  kong-db:
    image: postgres:14
    container_name: kong-db
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong -d kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  kong-migrations:
    image: kong:3.0
    container_name: kong-migrations
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kong
    entrypoint: ["kong", "migrations", "bootstrap"]
    networks:
      - app-network

  kong-gateway:
    image: kong:3.0
    container_name: kong-gateway
    depends_on:
      - kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kong
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/status"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth:
    build:
      context: ./auth-service
    container_name: auth_microservice
    ports:
      - "5001:5001"
    environment:
      - MONGO_URI=mongodb+srv://aj:Aj123*123@clustermain.rcwxbep.mongodb.net/?retryWrites=true&w=majority&appName=ClusterMain
      - JWT_SECRET=aj123
      - JWT_REFRESH_SECRET=aj123
    networks:
      - app-network

  quiz_management:
    build:
      context: ./quiz-service
    container_name: quiz_management_microservice
    ports:
      - "5002:5002"
    environment:
      - MONGO_URI=mongodb+srv://aj:Aj123*123@clustermain.rcwxbep.mongodb.net/?retryWrites=true&w=majority&appName=ClusterMain
    networks:
      - app-network

  ai:
    build: 
      context: ./ai-service
    container_name: ai_microservice
    ports:
      - "5000:5000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge


